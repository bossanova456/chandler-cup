name: Test, Build Image & Publish

on: 
  workflow_dispatch:
  push:
  pull_request:
    types:
      - closed

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: npm install
      - name: Test
        run: npm test

  version:
    needs: [ build-and-test ]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Version
        id: version
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          version_format: "v${major}.${minor}.${patch}"
          major_pattern: "MAJOR"
          minor_pattern: "MINOR"
        # Only tag upon merged pull request
      - name: Tag Version
        if: github.event.pull_request.merged == true
        id: tag
        shell: bash
        run: |
          echo "Semantic version: ${{ steps.version.outputs.version }}"
          git tag ${{ steps.version.outputs.version }}
          git push origin --tags

  build-image-and-push:
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: bossanova456
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build image and push (arm64)
        uses: docker/build-push-action@v4
        with:
          push: false
          # push: true
          platforms: linux/arm64
          tags: |
            bossanova456/chandler-cup-frontend:latest-arm64
            bossanova456/chandler-cup-frontend:${{ needs.version.outputs.version }}-arm64
  
  add-comment-to-issue:
    needs: [ build-and-test ]
    runs-on: ubuntu-latest
    outputs:
      comment-id: ${{ steps.post-comment.outputs.comment-id }}
    steps:
      - name: Get Issue Number
        id: get-issue-number
        shell: bash
        run: |
          readarray -d "-" -t branch_string <<< "${{ github.ref_name }}"
          ISSUE_NUM=${branch_string[1]}
          echo "Issue number: ${ISSUE_NUM}"
          echo "issue-num=${ISSUE_NUM}" >> "$GITHUB_OUTPUT"
      - name: Post Comment
        id: post-comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ steps.get-issue-number.outputs.issue-num }}
          body: |
            This comment will have a :eyes: reaction while build is in progress, and :rocket: when build is complete
          reactions: eyes
      - name: Print Comment ID
        shell: bash
        run: |
          echo "Comment ID: ${{ steps.post-comment.outputs.comment-id }}"

  # update-comment-with-build-status:
  #   if: ${{ always() && !cancelled() && needs.add-comment-to-issue.result == 'success' }}
  #   needs: [ build-image-and-push, add-comment-to-issue ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Update Comment
  #       uses: peter-evans/create-or-update-comment@v3
  #       with:
  #         issue-number: ${{ needs.add-comment-to-issue.outputs.comment-id }}
  #         edit-mode: 'replace'
  #         body: |
  #           This comment will have a :white_square_button: reaction while build is in progress, and :white_check_mark: when build is complete
  #         reactions-edit-mode: 'replace'
  #         reactions: white_check_mark